set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'git://github.com/airblade/vim-gitgutter.git'
Plugin 'https://github.com/tpope/vim-fugitive.git'
" plugin from http://vim-scripts.org/vim/scripts.html
Plugin 'L9'
" Git plugin not hosted on GitHub
Plugin 'git://git.wincent.com/command-t.git'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}
Plugin 'flazz/vim-colorschemes'
Plugin 'https://github.com/joshdick/onedark.vim.git'
Plugin 'arcticicestudio/nord-vim'
Plugin 'larsbs/vimterial_dark'
Plugin 'https://github.com/benburrill/potato-colors'
Plugin 'Yggdroot/indentLine'
Plugin 'https://github.com/itchyny/lightline.vim'
Plugin 'https://github.com/pacha/vem-tabline/'
Plugin 'mgee/lightline-bufferline'

Plugin 'git://github.com/tpope/vim-surround.git'

" NERDTree
Plugin 'https://github.com/scrooloose/nerdtree.git'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'ryanoasis/vim-devicons'
Plugin 'https://github.com/tiagofumo/vim-nerdtree-syntax-highlight'
Plugin 'https://github.com/Xuyuanp/nerdtree-git-plugin.git'
"
"
Plugin 'https://github.com/simnalamburt/vim-mundo'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'https://github.com/scrooloose/nerdcommenter'
Plugin 'https://github.com/plytophogy/vim-virtualenv'
Plugin 'https://github.com/jreybert/vimagit'
" Plugin 'https://github.com/vim-scripts/taglist.vim'
Plugin 'https://github.com/ctrlpvim/ctrlp.vim'
Plugin 'https://github.com/terryma/vim-smooth-scroll'
Plugin 'https://github.com/w0rp/ale'
Plugin 'https://github.com/tommcdo/vim-exchange/'
Plugin 'https://github.com/dhruvasagar/vim-vinegar'
Plugin 'JamshedVesuna/vim-markdown-preview'
Plugin 'https://github.com/brooth/far.vim'
Plugin 'https://github.com/jlanzarotta/bufexplorer'
Plugin 'https://github.com/mhinz/vim-startify'
Plugin 'https://github.com/wincent/terminus'
Plugin 'https://github.com/vim-scripts/ZoomWin'

" Transparent backgrounds
Plugin 'https://github.com/miyakogi/seiya.vim'


" Multi cursors
Plugin 'https://github.com/mg979/vim-visual-multi'

"Python Plugins
Plugin 'https://github.com/Valloric/YouCompleteMe'
Plugin 'davidhalter/jedi-vim'
Plugin 'vim-scripts/indentpython.vim'
Plugin 'https://github.com/jeetsukumaran/vim-pythonsense'
Plugin 'deoplete-plugins/deoplete-jedi'
Plugin 'ntk148v/vim-horizon'


" Fzf
set rtp+=~/.fzf
Plugin 'junegunn/fzf.vim'
let g:ackprg = 'ag --nogroup --nocolor --column'

" Customize fzf colors to match your color scheme
let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'border':  ['fg', 'Ignore'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }

"Highlight searches while typing
set incsearch

"default to case insensitive search
set ic

" Jedi-vim setup
let g:jedi#popup_on_dot = 0
let g:jedi#use_splits_not_buffers = "left"
let g:jedi#completions_enabled = 1
let g:jedi#smart_auto_mappings = 0

"Macro for debugging in ipython
" let @o = "oÄFCfrom IPython import embed; embed(); raise ValueError()ÄFD"
let @o = 'ofrom IPython import embed; embed(); raise ValueError()0w'

"Smooth Scroll
noremap <silent> <c-u> :call smooth_scroll#up(&scroll, 0, 2)<CR>
noremap <silent> <c-d> :call smooth_scroll#down(&scroll, 0, 2)<CR>
noremap <silent> <c-b> :call smooth_scroll#up(&scroll*2, 0, 4)<CR>
noremap <silent> <c-f> :call smooth_scroll#down(&scroll*2, 0, 4)<CR>

" navigate tabs
map tn :tabnew<Space>
nnoremap tk :tabnext<CR>
nnoremap tj :tabprev<CR>
nnoremap th :tabfirst<CR>
nnoremap tl :tablast<CR>

" Set lightline theme
let g:lightline = {
      \ 'colorscheme': 'nord',
      \ }

let g:lightline.tabline          = {'left': [['buffers']], 'right': [['close']]}
let g:lightline.component_expand = {'buffers': 'lightline#bufferline#buffers'}
let g:lightline.component_type   = {'buffers': 'tabsel'}


" NerdCommenter:
" Toggle comment
map <C-_> <leader>c<space>

" Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1

" Use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1

" Align line-wise comment delimiters flush left instead of following code indentation
let g:NERDDefaultAlign = 'left'

" Set a language to use its alternate delimiters by default
let g:NERDAltDelims_java = 1

" Add your own custom formats or override the defaults
let g:NERDCustomDelimiters = { 'c': { 'left': '/**','right': '*/' } }

" Allow commenting and inverting empty lines (useful when commenting a region)
let g:NERDCommentEmptyLines = 1

" Enable trimming of trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1

" let g:nerdtree_tabs_smart_startup_focus=1
map <C-[>n <plug>NERDTreeTabsToggle<CR>
map <space> :NERDTreeToggle<CR>

" Place0 cursor with mouse ndkey -v
set mouse=a

" Copy to system register:
set clipboard=unnamedplus


" Mundo: Enable persistent undo so that undo history persists across vim sessions
set undofile
set undodir=~/.vim/undo
nnoremap <F5> :MundoToggle<CR>

"indentLine
let g:indentLine_enabled = 0

" YouCompleteMe
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>
let g:ycm_min_num_of_chars_for_completion = 99

" VimMarkdownPreview
let vim_markdown_preview_github=1
let vim_markdown_preview_hotkey='<C-m>'


"python with virtualenv support for YouCompleteMe
"Source https://realpython.com/vim-and-python-a-match-made-in-heaven/

" Start NERDTree
autocmd VimEnter * NERDTree
" Go to previous (last accessed) window.
autocmd VimEnter * wincmd p
let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree
let g:NERDTreeDirArrowExpandable = "\u00a0"
let g:NERDTreeDirArrowCollapsible = "\u00a0"
let g:WebDevIconsNerdTreeBeforeGlyphPadding = ""
let g:WebDevIconsUnicodeDecorateFolderNodes = v:true
let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "*",
    \ "Staged"    : "+",
    \ "Untracked" : "‚ú≠",
    \ "Renamed"   : "‚ûú",
    \ "Unmerged"  : "‚ïê",
    \ "Deleted"   : "‚úñ",
    \ "Dirty"     : "‚úó",
    \ "Clean"     : "‚úîÔ∏é",
    \ 'Ignored'   : '‚òí',
    \ "Unknown"   : "?"
    \ }

" Use ctrl-[hjkl] to select the active split!
nmap <silent> <c-k> :wincmd k<CR>
nmap <silent> <c-j> :wincmd j<CR>
nmap <silent> <c-h> :wincmd h<CR>
nmap <silent> <c-l> :wincmd l<CR>
"
"split navigations
" map <C-J> <C-W><C-J>
" map <C-K> <C-W><C-K>
" map <C-L> <C-W><C-L>
" map <C-H> <C-W><C-H>

" highlight words on search
:set hlsearch
" undo highlight
nmap <C-n> :noh <CR>
filetype off                  " required

" enable syntax highlighting
syntax enable

" Split to the right when opening a new window
set splitright
" show relative line numbers
set number relativenumber

" Untoggle relative line number when not in window
:augroup numbertoggle
:  autocmd!
:  autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
:  autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
:augroup END


" set tabs to have 4 spaces
set ts=4

" indent when moving to the next line while writing code
set autoindent

" expand tabs into spaces
set expandtab

" when using the >> or << commands, shift lines by 4 spaces
set shiftwidth=4

" show a visual line under the cursor's current line
set cursorline

set updatetime=100
" show the matching part of the pair for [] {} and ()
set showmatch

set backspace=indent,eol,start

" enable all Python syntax highlighting features
let python_highlight_all = 1
syntax on

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
set t_Co=256
augroup nord-overrides
  autocmd!
  autocmd ColorScheme nord highlight Comment ctermfg=8
  autocmd ColorScheme nord highlight Visual ctermbg=8 "set color 8 in term to #788398
augroup END

" colorscheme onedark

colorscheme nord
" colorscheme vimterial_dark
" colorscheme molokai
" colorscheme blackboard
" colorscheme potato
" colorscheme horizon
" hi Normal ctermbg=none
" hi NonText ctermbg=none
" hi LineNr ctermbg=none
" hi ALEErrorLine ctermbg=none
" let g:seiya_target_groups = has('nvim') ? ['guibg'] : ['ctermbg']
"


" Autoremove trailing whitespace
autocmd BufWritePre * %s/\s\+$//e

set encoding=UTF-8

" For .txt files and markdown files, enable spell checking
au BufReadPost,BufNewFile *.md,*.txt,*.tex
    \ set spell spelllang=en_ca

" .py specific settings
au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    " \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix |
